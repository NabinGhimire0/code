***comment controller (store)***

public function store(Request $request)
    {
        $request->validate([
            'comment' => 'required',
            'post_id' => 'required',
        ]);

        $comment = new Comment();
        $comment->comment = $request->comment;
        $comment->post_id = $request->post_id;
        $comment->user_id = Auth::user()->id;  
        $comment->save();

        return response()->json(
            [
                'success' => true,
                'message' => 'Commented',
            ]
        );
    }


***postcontroller (store) ***

public function store(Request $request)
    {
        $request->validate([
            'caption' => 'required',
            'content.*' => 'nullable|mimes:jpg,jpeg,png,gif,mp4|max:25000',
        ]);

        $post = new Post();
        $post->caption = $request->caption;
        $post->user_id = Auth::user()->id;

        $content = [];

        // if ($request->hasFile('content')) {
        //     $content = json_decode($request->content, true);
        // }

        if ($request->hasFile('content')) {
            foreach ($request->file('content') as $file) {
                $newName = time() . $file->getClientOriginalName();
                $file->move('uploads/post', $newName);
                $data = [
                    'type' => $file->getClientOriginalExtension() == 'mp4' ? 'video' : 'image',
                    'path' => 'post/' . $newName
                ];
                $content[] = $data;
            }
        }

        $post->content = json_encode($content);
        $post->save();
        return response()->json(
            [
                'success' => true,
                'message' => 'Post created successfully',
            ]
            
        );
    }


***layouts.app***
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>{{$title ?? "title here "}}</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.bunny.net">
    <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="{{ asset('assets/css/app.css') }}">


    {{-- <!-- Scripts -->
    @vite(['resources/css/app.css', 'resources/js/app.js']) --}}
</head>

<body>
    <x-nav/>
    <x-post-form/>
    <div class="flex justify-center">
        <div class="w-8/12 bg-white p-6 rounded-lg">
            {{ $slot }}
        </div>
    </div>


    
</body>

</html>

***post-form.blade.php***
<main>
    <h2>create Post</h2>
    <div class="post">
        <form id="post-form">
            <table>
                <tr>
                    <td><label for="caption">Caption</label></td>
                    <td><input type="text" name="caption" id="" class="caption"></td>
                </tr>
                <tr>
                    <td><label for="file">Photo/Video</label></td>
                    <td><input type="file" name="content[]" class="content" id="" multiple></td>
                </tr>

            </table>
            <div colspan="" style="display:flex;  direction: rtl;">
                <button class="btn-post">Post</button>
            </div>
        </form>
    </div>

    <script>
        // ajax
        $('document').ready(function() {
            $.ajaxSetup({
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            });

            $('#post-form').on('submit', function(e) {
                e.preventDefault();
                // var caption = $('.caption').val();
                // var file = $('.file').val();
                let formData = new FormData(this);
                $.ajax({
                    url: "/posts",
                    type: 'POST',
                    data: formData,
                    contentType: false, 
                    processData: false,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            $('#post-form')[0].reset(); 
                        }
                    },
                    error: function(xhr) {
                        alert('An error occurred. Please try again.');
                    }
                });
            })
        })
    </script>
</main>



***post.blade.php***
@props(['post'])

<div class="content">
    <div class="post_owner">
        <img src="{{ asset('assets/images/default.jfif') }}" width="60px" height="60px" alt="">
        <div>
            <p>{{ $post->user->name }}</p>
            <p>{{ $post->created_at->diffForHumans() }}</p>
        </div>
    </div>
    <div class="post_caption">
        <p>{{ $post->caption }}</p>
        <div class="gallery">
            @php
                $contentArray = json_decode($post->content, true);
                $liked = false;
            @endphp
            <div class="main-container">
                @foreach ($contentArray as $index => $item)
                    @if ($item['type'] === 'image')
                        <img src="{{ asset('uploads/' . $item['path']) }}" alt=""
                            id="main-image-{{ $post->id }}" class="main">
                    @else
                        <video width="100%" controls>
                            <source src="{{ asset('uploads/' . $item['path']) }}" type="video/mp4">
                            Your browser does not support the video tag.
                        </video>
                    @endif
                @break
            @endforeach
        </div>
        <div class="thumbnails">
            @foreach ($contentArray as $index => $item)
                <img src="{{ asset('uploads/' . $item['path']) }}" alt="" class="sub"
                    onclick="changeMainImage(this, 'main-image-{{ $post->id }}')">
            @endforeach
        </div>
    </div>
</div>

<div class="post_interaction">
    <button class="like_button {{ $liked ? 'liked' : '' }}" onclick="toggleLike(this)">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
                fill="currentColor" />
        </svg>
    </button>
</div>

<div class="comments_section" id="comments_section">
    <div class="comments_container">
        @foreach ($post->comments as $comment)
            <div class="comment">
                <img src="{{ asset('assets/images/default.jfif') }}" width="40px" height="40px" alt=""
                    class="comment_profile">
                <p><strong>{{ $comment['user']['name'] }}</strong> {{ $comment['comment'] }}</p>
            </div>
        @endforeach
    </div>
    <form id="comment-form">
        <div>
            <textarea class="comment-input" name="comment-input" placeholder="Add a comment..." style="width: 90%;height:4rem"></textarea>
        </div>
        <input type="hidden" name="post_id" class="post_id" value="{{ $post->id }}" id="">
        <button>Comment</button>
    </form>
</div>
</div>
<script>
    // add comments
    $('document').ready(function() {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });

        $('#comment-form').on('submit', function(e) {
            e.preventDefault();

            var comment = $('.comment-input').val();
            var postId = $('.post_id').val();

            $.ajax({
                url: "/comments",
                type: 'POST',
                data: {
                    comment: comment,
                    post_id: postId
                },
                // contentType: false,
                // processData: false,
                success: function(response) {
                    if (response.success) {
                        alert(response.message);
                        $('#comments_section')[0].reset();
                    }
                },
                error: function(xhr) {
                    alert('An error occurred. Please try again.');
                }
            });
        });
    });
</script>
{{ $script ?? '' }}

***nav.blade.php***

<div class="nav">
    <nav>
        <div class="logo">
            <h1>Vac community</h1>
        </div>


        <div class="nav__right">
            <div class="nav__right__profile">
                <img src="{{ asset('assets/images/default.jfif') }}" alt="" width="50" height="50">
                <p>{{ Auth::user()->name }}</p>
            </div>

            <form method="POST" action="{{ route('logout') }}">
                @csrf

                <x-responsive-nav-link :href="route('logout')"
                    onclick="event.preventDefault();
                                    this.closest('form').submit();">
                    {{ __('Log Out') }}
                </x-responsive-nav-link>
            </form>

        </div>
    </nav>
</div>
<script>
    {{ $script ?? '' }}
</script>

//nav
<div class="nav">
    <nav>
        <div class="logo">
            <h1>Vac community</h1>
        </div>


        <div class="nav__right">
            <div class="nav__right__profile">
                <img src="{{ asset('assets/images/default.jfif') }}" alt="" width="50" height="50">
                <p>{{ Auth::user()->name }}</p>
            </div>

            <form method="POST" action="{{ route('logout') }}">
                @csrf

                <x-responsive-nav-link :href="route('logout')"
                    onclick="event.preventDefault();
                                    this.closest('form').submit();">
                    {{ __('Log Out') }}
                </x-responsive-nav-link>
            </form>

        </div>
    </nav>
</div>
<script>
    {{ $script ?? '' }}
</script>


//dashboard.blade
<x-app-layout>
    <x-slot name="title">
        home
    </x-slot>


    @foreach ($posts as $post)
        <x-post :post="$post">
            <x-slot name="script">
                <script>
                    function changeMainImage(element, mainImageId) {
                        const mainImage = document.getElementById(mainImageId);
                        mainImage.src = element.src;
                    }

                    function toggleLike(button) {
                        button.classList.toggle('liked');
                        // You can add an AJAX request here to update the like status in the database
                    }
                </script>
            </x-slot>
        </x-post>
    @endforeach
    
</x-app-layout>

//model
Comment
Like
Post

//post migration
$table->foreignId('user_id')->references('id')->on('users')->onDelete('cascade');
            $table->text('caption');
            $table->text('content');
            $table->boolean('status')->default(0);

            //comment migration
            $table->foreignId('post_id')->references('id')->on('posts')->onDelete('cascade');
            $table->mediumText('comment');
            $table->foreignId('user_id')->references('id')->on('users')->onDelete('cascade');
            $table->boolean('status')->default(0);

        


web.php
Route::get('/dashboard', function () {
    //fetch post with comments
    $posts = Post::with('comments')->get();
    return view('dashboard', compact('posts'));
})->middleware(['auth', 'verified'])->name('dashboard');

Route::resource('posts',PostController::class);
Route::resource('comments',CommentController::class);

//soft relation 
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Comment extends Model
{
    use HasFactory;

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function post()
    {
        return $this->belongsTo(Post::class);
    }
}


//

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Post extends Model
{
    use HasFactory;

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function comments()
    {
        return $this->hasMany(Comment::class);
    }
}

